scale_color_manual(values = c('blue', 'black', 'forest green', 'red', 'blue')) +
coord_trans(x='log10') +
scale_x_continuous(breaks = c(10^-5, 10^-3,.1, 10, 1000, 100000), limits = c(10^-5, 10^6)) +
theme_classic(base_size = 16) +
theme(legend.title=element_text(colour='white', size=0)) +
labs(x = expression(paste('Concentration of Bifenthrin [ ', mu, 'g ', L^-1, ' ]')),
y = 'Fraction of Species Affected')
HC5 <- cbind(HC5, row)
HC5 <- c(hc5_LC50_chronic,hc5_LC50_acute, hc5_EC50_chronic, hc5_EC50_acute)
#EcoTox data
LC50_acute <- as_tibble(read.csv('../Visalia_PesticideRisk/Data/Ecotoxicological_Data/Bifenthrin_Animal_LC50_RevisedSpeciesGroup_sub96h.csv'))
colnames(LC50_acute)[2] <- c('val')
colnames(LC50_acute)[4] <- c('species')
LC50_acute <- filter(LC50_acute, MediaType == 'Fresh water' )
LC50_acute$val <-  LC50_acute$val*1000
n_LC50_acute <- paste(c('Modeled LC50 (n=',toString(length(LC50_acute$val)), ')'), collapse ="")
#Derive species sensitivity distribution
#calculate the fraction affected
LC50_acute <- LC50_acute[order(LC50_acute$val), ]
LC50_acute$frac <- ppoints(LC50_acute$val, .5)
#Derive Species Group median LC50
LC50_acute_GroupMedians <- aggregate(LC50_acute$val, list(LC50_acute$SpeciesGroup), median)
colnames(LC50_acute_GroupMedians) <- c('SpeciesGroup', 'val')
#Evaluate affected fraction
LC50_acute_GroupMedians <- LC50_acute_GroupMedians[order(LC50_acute_GroupMedians$val), ]
LC50_acute_GroupMedians$frac <- ppoints(LC50_acute_GroupMedians$val, .5)
#Create matrix of the minimum observed and PEC concentrations
FW_Obs_min_x <-  c(min(FW_Obs$Result_ppb), min(FW_Obs$Result_ppb))
FW_Obs_min_y <- c(0, 1)
FW_Obs_min_freq <- as_tibble(cbind(FW_Obs_min_x,FW_Obs_min_y))
fw_conc_min_x <- c(quantile(BulkPEC_AdjustedFW$fw_conc, 0.025), quantile(BulkPEC_AdjustedFW$fw_conc, 0.025))
fw_conc_min_y <- c(0,1)
fw_conc_min_freq <- as_tibble(cbind(fw_conc_min_x, fw_conc_min_y))
#Create matrix of maximum observed concentrations
FW_Obs_max_x <-  c(max(FW_Obs$Result_ppb),max(FW_Obs$Result_ppb))
FW_Obs_max_y <- c(0, 1)
FW_Obs_max_freq <- as_tibble(cbind(FW_Obs_max_x,FW_Obs_max_y))
fw_conc_max_x <- c(quantile(BulkPEC_AdjustedFW$fw_conc, 0.975), quantile(BulkPEC_AdjustedFW$fw_conc, 0.975))
fw_conc_max_y <- c(0,1)
fw_conc_max_freq <- as_tibble(cbind(fw_conc_max_x, fw_conc_max_y))
#View data
ggplot() +
geom_point(data = LC50_acute, aes(x = val, y = frac, shape = 'Observed LC50'), size = 1) +
geom_point(data = LC50_acute_GroupMedians, aes(x = val, y = frac, shape = 'Taxon Median LC50'), size = 3) +
geom_label_repel(data = LC50_acute_GroupMedians, aes(x=val, y=frac, label=SpeciesGroup),
box.padding   = 0.35,
point.padding = 0.25,
segment.color = 'grey50',
force = 3) +
geom_line(data = FW_Obs_min_freq, aes(x=FW_Obs_min_x, y = FW_Obs_min_y, color = 'Observed Range'), linetype = 2) +
geom_line(data = FW_Obs_max_freq, aes(x=FW_Obs_max_x, y = FW_Obs_max_y), color = 'forest green', linetype = 2) +
geom_line(data = fw_conc_min_freq, aes(x=fw_conc_min_x, y = fw_conc_min_y, color = 'PEC Range')) +
geom_line(data = fw_conc_max_freq, aes(x=fw_conc_max_x, y = fw_conc_max_y), color = 'red') +
theme_classic(base_size = 16) +
theme(legend.title=element_text(colour='white', size=0)) +
scale_color_manual(values = c('forest green', 'red', 'black')) +
coord_trans(x='log10') +
scale_x_continuous(breaks = c(10^-5, 10^-3,.1, 10, 1000, 100000), limits = c(10^-5, 10^6)) +
labs(x = expression(paste('Concentration of Bifenthrin [ ', mu, 'g ', L^-1, ' ]')), y = 'Fraction of Species Affected')
#Create fitted distribution
fit <- fitdistr(LC50_acute$val, 'lognormal')
#Derive concentration at which 5% of species are affected (HC5)
hc5_LC50_acute <- qlnorm(0.05, meanlog = fit$estimate[1], sdlog = fit$estimate[2])
#HC5 matrix for plotting
hc5_LC50_acute_x <- c(hc5_LC50_acute, hc5_LC50_acute)
hc5_LC50_acute_y <- c(0, 1)
# add fitted values
###find range of values to plot from fitted distribution
perc_99<- qlnorm(0.99, meanlog = fit$estimate[1], sdlog = fit$estimate[2])
perc_1<- qlnorm(0.01, meanlog = fit$estimate[1], sdlog = fit$estimate[2])
pdat_range<- seq(from = perc_1, to = perc_99, length.out = 100000)
###create data frame of values to plot
pdat<- data.frame(pdat_range, py = plnorm(pdat_range, meanlog = fit$estimate[1], sdlog = fit$estimate[2]))
# plot
ggplot() +
geom_point(data = LC50_acute_GroupMedians, aes(x = val, y = frac, fill = 'Taxon Median LC50'), color = 'black') +
geom_label_repel(data = LC50_acute_GroupMedians, aes(x=val, y=frac, label=SpeciesGroup),
box.padding   = 0.35,
point.padding = 0.25,
segment.color = 'grey50',
force = 4) +
geom_line(data = pdat, aes(x = pdat_range, y = py, color = n_LC50_acute)) +
geom_line(aes(x=hc5_LC50_acute_x, y=hc5_LC50_acute_y, color = '5% Affected'), linetype = 5) +
geom_line(data = FW_Obs_min_freq, aes(x=FW_Obs_min_x, y = FW_Obs_min_y, color = 'Observed Range'), linetype = 2) +
geom_line(data = FW_Obs_max_freq, aes(x=FW_Obs_max_x, y = FW_Obs_max_y), color = 'forest green', linetype = 2) +
geom_line(data = fw_conc_min_freq, aes(x=fw_conc_min_x, y = fw_conc_min_y, color = 'PEC Range')) +
geom_line(data = fw_conc_max_freq, aes(x=fw_conc_max_x, y = fw_conc_max_y), color = 'red') +
scale_color_manual(values = c('blue', 'black', 'forest green', 'red', 'blue')) +
coord_trans(x='log10') +
scale_x_continuous(breaks = c(10^-5, 10^-3,.1, 10, 1000, 100000), limits = c(10^-5, 10^6)) +
theme_classic(base_size = 16) +
theme(legend.title=element_text(colour='white', size=0)) +
labs(x = expression(paste('Concentration of Bifenthrin [ ', mu, 'g ', L^-1, ' ]')),
y = 'Fraction of Species Affected')
#EcoTox data
LC50_chronic <- as_tibble(read.csv('../Visalia_PesticideRisk/Data/Ecotoxicological_Data/Bifenthrin_Animal_LC50_RevisedSpeciesGroup_above96h.csv'))
colnames(LC50_chronic)[2] <- c('val')
colnames(LC50_chronic)[4] <- c('species')
LC50_chronic <- filter(LC50_chronic, MediaType == 'Fresh water' )
LC50_chronic$val <-  LC50_chronic$val*1000
n_LC50_chronic <- paste(c('Modeled LC50 (n=',toString(length(LC50_chronic$val)), ')'), collapse ="")
#Derive species sensitivity distribution
#calculate the fraction affected
LC50_chronic <- LC50_chronic[order(LC50_chronic$val), ]
LC50_chronic$frac <- ppoints(LC50_chronic$val, .5)
#Derive Species Group median LC50
LC50_chronic_GroupMedians <- aggregate(LC50_chronic$val, list(LC50_chronic$SpeciesGroup), median)
colnames(LC50_chronic_GroupMedians) <- c('SpeciesGroup', 'val')
#Evaluate affected fraction
LC50_chronic_GroupMedians <- LC50_chronic_GroupMedians[order(LC50_chronic_GroupMedians$val), ]
LC50_chronic_GroupMedians$frac <- ppoints(LC50_chronic_GroupMedians$val, .5)
#View data
ggplot() +
geom_point(data = LC50_chronic, aes(x = val, y = frac, shape = 'Observed LC50'), size = 1) +
geom_point(data = LC50_chronic_GroupMedians, aes(x = val, y = frac, shape = 'Taxon Median LC50'), size = 3) +
geom_label_repel(data = LC50_chronic_GroupMedians, aes(x=val, y=frac, label=SpeciesGroup),
box.padding   = 0.35,
point.padding = 0.25,
segment.color = 'grey50',
force = 3) +
geom_line(data = FW_Obs_min_freq, aes(x=FW_Obs_min_x, y = FW_Obs_min_y, color = 'Observed Range'), linetype = 2) +
geom_line(data = FW_Obs_max_freq, aes(x=FW_Obs_max_x, y = FW_Obs_max_y), color = 'forest green', linetype = 2) +
geom_line(data = fw_conc_min_freq, aes(x=fw_conc_min_x, y = fw_conc_min_y, color = 'PEC Range')) +
geom_line(data = fw_conc_max_freq, aes(x=fw_conc_max_x, y = fw_conc_max_y), color = 'red') +
theme_classic(base_size = 16) +
theme(legend.title=element_text(colour='white', size=0)) +
scale_color_manual(values = c('forest green', 'red', 'black')) +
coord_trans(x='log10') +
scale_x_continuous(breaks = c(10^-5, 10^-3,.1, 10, 1000, 100000), limits = c(10^-5, 10^6)) +
labs(x = expression(paste('Concentration of Bifenthrin [ ', mu, 'g ', L^-1, ' ]')), y = 'Fraction of Species Affected')
#Create fitted distribution
fit <- fitdistr(LC50_chronic$val, 'lognormal')
#Derive concentration at which 5% of species are affected (HC5)
hc5_LC50_chronic <- qlnorm(0.05, meanlog = fit$estimate[1], sdlog = fit$estimate[2])
#HC5 matrix for plotting
hc5_LC50_acute_x <- c(hc5_LC50_acute, hc5_LC50_acute)
hc5_LC50_acute_y <- c(0, 1)
# add fitted values
###find range of values to plot from fitted distribution
perc_99<- qlnorm(0.99, meanlog = fit$estimate[1], sdlog = fit$estimate[2])
perc_1<- qlnorm(0.01, meanlog = fit$estimate[1], sdlog = fit$estimate[2])
pdat_range<- seq(from = perc_1, to = perc_99, length.out = 1000000)
###create data frame of values to plot
pdat<- data.frame(pdat_range, py = plnorm(pdat_range, meanlog = fit$estimate[1], sdlog = fit$estimate[2]))
# plot
ggplot() +
geom_point(data = LC50_chronic_GroupMedians, aes(x = val, y = frac, fill = 'Taxon Median LC50'), color = 'black') +
geom_label_repel(data = LC50_chronic_GroupMedians, aes(x=val, y=frac, label=SpeciesGroup),
box.padding   = 0.35,
point.padding = 0.25,
segment.color = 'grey50',
force = 4) +
geom_line(data = pdat, aes(x = pdat_range, y = py, color = n_LC50_chronic)) +
geom_line(aes(x=hc5_LC50_acute_x, y=hc5_LC50_acute_y, color = '5% Affected'), linetype = 5) +
geom_line(data = FW_Obs_min_freq, aes(x=FW_Obs_min_x, y = FW_Obs_min_y, color = 'Observed Range'), linetype = 2) +
geom_line(data = FW_Obs_max_freq, aes(x=FW_Obs_max_x, y = FW_Obs_max_y), color = 'forest green', linetype = 2) +
geom_line(data = fw_conc_min_freq, aes(x=fw_conc_min_x, y = fw_conc_min_y, color = 'PEC Range')) +
geom_line(data = fw_conc_max_freq, aes(x=fw_conc_max_x, y = fw_conc_max_y), color = 'red') +
scale_color_manual(values = c('blue', 'black', 'forest green', 'red', 'blue')) +
coord_trans(x='log10') +
scale_x_continuous(breaks = c(10^-5, 10^-3,.1, 10, 1000, 100000), limits = c(10^-5, 10^6)) +
theme_classic(base_size = 16) +
theme(legend.title=element_text(colour='white', size=0)) +
labs(x = expression(paste('Concentration of Bifenthrin [ ', mu, 'g ', L^-1, ' ]')),
y = 'Fraction of Species Affected')
#EcoTox data
EC50_acute <- as_tibble(read.csv('../Visalia_PesticideRisk/Data/Ecotoxicological_Data/Bifenthrin_Animal_EC50_RevisedSpeciesGroup_sub96h.csv'))
colnames(EC50_acute)[2] <- c('val')
colnames(EC50_acute)[4] <- c('species')
EC50_acute <- filter(EC50_acute, MediaType == 'Fresh water' )
EC50_acute$val <-  EC50_acute$val*1000
n_EC50_acute<- paste(c('Modeled EC50 (n=',toString(length(EC50_acute$val)), ')'), collapse ="")
#Derive species sensitivity distribution
#calculate the fraction affected
EC50_acute <- EC50_acute[order(EC50_acute$val), ]
EC50_acute$frac <- ppoints(EC50_acute$val, .5)
#Derive Species Group median EC50
EC50_acute_GroupMedians <- aggregate(EC50_acute$val, list(EC50_acute$SpeciesGroup), median)
colnames(EC50_acute_GroupMedians) <- c('SpeciesGroup', 'val')
#Evaluate affected fraction
EC50_acute_GroupMedians <- EC50_acute_GroupMedians[order(EC50_acute_GroupMedians$val), ]
EC50_acute_GroupMedians$frac <- ppoints(EC50_acute_GroupMedians$val, .5)
#Create matrix of the minimum observed and PEC concentrations
FW_Obs_min_EC50_acute_x <-  c(min(FW_Obs$Result_ppb), min(FW_Obs$Result_ppb))
FW_Obs_min_EC50_acute_y <- c(0, 1)
FW_Obs_min_EC50_acute_freq <- as_tibble(cbind(FW_Obs_min_EC50_acute_x,FW_Obs_min_EC50_acute_y))
#Create matrix of maximum observed concentrations
FW_Obs_max_EC50_acute_x <-  c(max(FW_Obs$Result_ppb),max(FW_Obs$Result_ppb))
FW_Obs_max_EC50_acute_y <- c(0, 1)
FW_Obs_max_EC50_acute_freq <- as_tibble(cbind(FW_Obs_max_EC50_acute_x,FW_Obs_max_EC50_acute_y))
#View data
ggplot() +
geom_point(data = EC50_acute, aes(x = val, y = frac, shape = 'Observed EC50'), size = 1) +
geom_point(data = EC50_acute_GroupMedians, aes(x = val, y = frac, shape = 'Taxon Median EC50'), size = 3) +
geom_label_repel(data = EC50_acute_GroupMedians, aes(x=val, y=frac, label=SpeciesGroup),
box.padding   = 0.35,
point.padding = 0.25,
segment.color = 'grey50',
force = 3) +
geom_line(data = FW_Obs_min_EC50_acute_freq, aes(x=FW_Obs_min_EC50_acute_x, y = FW_Obs_min_EC50_acute_y, color = 'Observed Range'), linetype = 2) +
geom_line(data = FW_Obs_max_EC50_acute_freq, aes(x=FW_Obs_max_EC50_acute_x, y = FW_Obs_max_EC50_acute_y), color = 'forest green', linetype = 2) +
geom_line(data = fw_conc_min_freq, aes(x=fw_conc_min_x, y = fw_conc_min_y, color = 'PEC Range')) +
geom_line(data = fw_conc_max_freq, aes(x=fw_conc_max_x, y = fw_conc_max_y), color = 'red') +
theme_classic(base_size = 16) +
theme(legend.title=element_text(colour='white', size=0)) +
scale_color_manual(values = c('forest green', 'red', 'black')) +
coord_trans(x='log10') +
scale_x_continuous(breaks = c(10^-5, 10^-3,.1, 10, 1000, 100000), limits = c(10^-5, 10^6)) +
labs(x = expression(paste('Concentration of Bifenthrin [ ', mu, 'g ', L^-1, ' ]')), y = 'Fraction of Species Affected')
#Create fitted distribution
fit_EC50_acute <- fitdistr(EC50_acute$val, 'lognormal')
#Derive concentration at which 5% of species are affected (HC5)
hc5_EC50_acute <- qlnorm(0.05, meanlog = fit_EC50_acute$estimate[1], sdlog = fit_EC50_acute$estimate[2])
#HC5 matrix for plotting
hc5_EC50_acute_x <- c(hc5_EC50_acute, hc5_EC50_acute)
hc5_EC50_acute_y <- c(0, 1)
# add fitted values
###find range of values to plot from fitted distribution
perc_99_EC50_acute <- qlnorm(0.999, meanlog = fit_EC50_acute$estimate[1], sdlog = fit_EC50_acute$estimate[2])
perc_1_EC50_acute <- qlnorm(0.001, meanlog = fit_EC50_acute$estimate[1], sdlog = fit_EC50_acute$estimate[2])
pdat_range_EC50_acute <-  seq(from = perc_1_EC50_acute, to = perc_99_EC50_acute, length.out = 100000)
###create data frame of values to plot
pdat_EC50_acute <- data.frame(pdat_range_EC50_acute, py = plnorm(pdat_range_EC50_acute, meanlog = fit_EC50_acute$estimate[1], sdlog = fit_EC50_acute$estimate[2]))
# plot
ggplot() +
geom_point(data = EC50_acute_GroupMedians, aes(x = val, y = frac, fill = 'Taxon Median EC50'), color = 'black') +
geom_label_repel(data = EC50_acute_GroupMedians, aes(x=val, y=frac, label=SpeciesGroup),
box.padding   = 0.35,
point.padding = 0.25,
segment.color = 'grey50',
force = 4) +
geom_line(data = pdat_EC50_acute, aes(x = pdat_range_EC50_acute, y = py, color = n_EC50_acute)) +
geom_line(aes(x=hc5_EC50_acute_x, y=hc5_EC50_acute_y, color = '5% Affected'), linetype = 5) +
geom_line(data = FW_Obs_min_EC50_acute_freq, aes(x=FW_Obs_min_EC50_acute_x, y = FW_Obs_min_EC50_acute_y, color = 'Observed Range'), linetype = 2) +
geom_line(data = FW_Obs_max_EC50_acute_freq, aes(x=FW_Obs_max_EC50_acute_x, y = FW_Obs_max_EC50_acute_y), color = 'forest green', linetype = 2) +
geom_line(data = fw_conc_min_freq, aes(x=fw_conc_min_x, y = fw_conc_min_y, color = 'PEC Range')) +
geom_line(data = fw_conc_max_freq, aes(x=fw_conc_max_x, y = fw_conc_max_y), color = 'red') +
scale_color_manual(values = c('blue', 'black', 'forest green', 'red', 'blue')) +
coord_trans(x='log10') +
scale_x_continuous(breaks = c(10^-5, 10^-3,.1, 10, 1000, 100000), limits = c(10^-5, 10^6)) +
theme_classic(base_size = 16) +
theme(legend.title=element_text(colour='white', size=0)) +
labs(x = expression(paste('Concentration of Bifenthrin [ ', mu, 'g ', L^-1, ' ]')),
y = 'Fraction of Species Affected')
#EcoTox data
EC50_chronic <- as_tibble(read.csv('../Visalia_PesticideRisk/Data/Ecotoxicological_Data/Bifenthrin_Animal_EC50_RevisedSpeciesGroup_above96h.csv'))
colnames(EC50_chronic)[2] <- c('val')
colnames(EC50_chronic)[4] <- c('species')
EC50_chronic <- filter(EC50_chronic, MediaType == 'Fresh water' )
EC50_chronic$val <-  EC50_chronic$val*1000
n_EC50_chronic <- paste(c('Modeled EC50 (n=',toString(length(EC50_chronic$val)), ')'), collapse ="")
#Derive species sensitivity distribution
#calculate the fraction affected
EC50_chronic <- EC50_chronic[order(EC50_chronic$val), ]
EC50_chronic$frac <- ppoints(EC50_chronic$val, .5)
#Derive Species Group median EC50
EC50_chronic_GroupMedians <- aggregate(EC50_chronic$val, list(EC50_chronic$SpeciesGroup), median)
colnames(EC50_chronic_GroupMedians) <- c('SpeciesGroup', 'val')
#Evaluate affected fraction
EC50_chronic_GroupMedians <- EC50_chronic_GroupMedians[order(EC50_chronic_GroupMedians$val), ]
EC50_chronic_GroupMedians$frac <- ppoints(EC50_chronic_GroupMedians$val, .5)
#Create matrix of the minimum observed and PEC concentrations
FW_Obs_min_EC50_chronic_x <-  c(min(FW_Obs$Result_ppb), min(FW_Obs$Result_ppb))
FW_Obs_min_EC50_chronic_y <- c(0, 1)
FW_Obs_min_EC50_chronic_freq <- as_tibble(cbind(FW_Obs_min_EC50_chronic_x,FW_Obs_min_EC50_chronic_y))
#Create matrix of maximum observed concentrations
FW_Obs_max_EC50_chronic_x <-  c(max(FW_Obs$Result_ppb),max(FW_Obs$Result_ppb))
FW_Obs_max_EC50_chronic_y <- c(0, 1)
FW_Obs_max_EC50_chronic_freq <- as_tibble(cbind(FW_Obs_max_EC50_chronic_x,FW_Obs_max_EC50_chronic_y))
#View data
ggplot() +
geom_point(data = EC50_chronic, aes(x = val, y = frac, shape = 'Observed EC50')) +
geom_point(data = EC50_chronic_GroupMedians, aes(x = val, y = frac, shape = 'Taxon Median EC50'), size = 3) +
geom_label_repel(data = EC50_chronic_GroupMedians, aes(x=val, y=frac, label=SpeciesGroup),
box.padding   = 0.35,
point.padding = 0.25,
segment.color = 'grey50',
force = 3) +
geom_line(data = FW_Obs_min_EC50_chronic_freq, aes(x=FW_Obs_min_EC50_chronic_x, y = FW_Obs_min_EC50_chronic_y, color = 'Observed Range'), linetype = 2) +
geom_line(data = FW_Obs_max_EC50_chronic_freq, aes(x=FW_Obs_max_EC50_chronic_x, y = FW_Obs_max_EC50_chronic_y), color = 'forest green', linetype = 2) +
geom_line(data = fw_conc_min_freq, aes(x=fw_conc_min_x, y = fw_conc_min_y, color = 'PEC Range')) +
geom_line(data = fw_conc_max_freq, aes(x=fw_conc_max_x, y = fw_conc_max_y), color = 'red') +
theme_classic(base_size = 16) +
theme(legend.title=element_text(colour='white', size=0)) +
scale_color_manual(values = c('forest green', 'red', 'black')) +
coord_trans(x='log10') +
scale_x_continuous(breaks = c(10^-5, 10^-3,.1, 10, 1000, 100000), limits = c(10^-5, 10^6)) +
labs(x = expression(paste('Concentration of Bifenthrin [ ', mu, 'g ', L^-1, ' ]')), y = 'Fraction of Species Affected')
#Create fitted distribution
fit_EC50_chronic <- fitdistr(EC50_chronic$val, 'lognormal')
#Derive concentration at which 5% of species are affected (HC5)
hc5_EC50_chronic_EC50_chronic <- qlnorm(0.05, meanlog = fit_EC50_chronic$estimate[1], sdlog = fit_EC50_chronic$estimate[2])
#HC5 matrix for plotting
hc5_EC50_chronic_x <- c(hc5_EC50_chronic, hc5_EC50_chronic)
hc5_EC50_chronic_y <- c(0, 1)
# add fitted values
###find range of values to plot from fitted distribution
perc_99_EC50_chronic <- qlnorm(0.999, meanlog = fit_EC50_chronic$estimate[1], sdlog = fit_EC50_chronic$estimate[2])
perc_1_EC50_chronic <- qlnorm(0.001, meanlog = fit_EC50_chronic$estimate[1], sdlog = fit_EC50_chronic$estimate[2])
pdat_range_EC50_chronic <-  seq(from = perc_1_EC50_chronic, to = perc_99_EC50_chronic, length.out = 1000000)
###create data frame of values to plot
pdat_EC50_chronic <- data.frame(pdat_range_EC50_chronic, py = plnorm(pdat_range_EC50_chronic, meanlog = fit_EC50_chronic$estimate[1], sdlog = fit_EC50_chronic$estimate[2]))
# plot
ggplot() +
geom_point(data = EC50_chronic_GroupMedians, aes(x = val, y = frac, fill = 'Taxon Median EC50'), color = 'black') +
geom_label_repel(data = EC50_chronic_GroupMedians, aes(x=val, y=frac, label=SpeciesGroup),
box.padding   = 0.35,
point.padding = 0.25,
segment.color = 'grey50',
force = 4) +
geom_line(data = pdat_EC50_chronic, aes(x = pdat_range_EC50_chronic, y = py, color = n_EC50_chronic)) +
geom_line(aes(x=hc5_EC50_chronic_x, y=hc5_EC50_chronic_y, color = '5% Affected'), linetype = 5) +
geom_line(data = FW_Obs_min_EC50_chronic_freq, aes(x=FW_Obs_min_EC50_chronic_x, y = FW_Obs_min_EC50_chronic_y, color = 'Observed Range'), linetype = 2) +
geom_line(data = FW_Obs_max_EC50_chronic_freq, aes(x=FW_Obs_max_EC50_chronic_x, y = FW_Obs_max_EC50_chronic_y), color = 'forest green', linetype = 2) +
geom_line(data = fw_conc_min_freq, aes(x=fw_conc_min_x, y = fw_conc_min_y, color = 'PEC Range')) +
geom_line(data = fw_conc_max_freq, aes(x=fw_conc_max_x, y = fw_conc_max_y), color = 'red') +
scale_color_manual(values = c('blue', 'black', 'forest green', 'red', 'blue')) +
coord_trans(x='log10') +
scale_x_continuous(breaks = c(10^-5, 10^-3,.1, 10, 1000, 100000), limits = c(10^-5, 10^6)) +
theme_classic(base_size = 16) +
theme(legend.title=element_text(colour='white', size=0)) +
labs(x = expression(paste('Concentration of Bifenthrin [ ', mu, 'g ', L^-1, ' ]')),
y = 'Fraction of Species Affected')
HC5 <- c(hc5_LC50_chronic,hc5_LC50_acute, hc5_EC50_chronic, hc5_EC50_acute)
row<- c('LC50 Chronic', 'LC50 Acute', 'EC50 Chronic', 'EC50 Acute')
HC5 <- cbind(HC5, row)
QuantilesFW <- rbind(ObservedQuantFW,DefaultQuantFW, AdjustedFWCompQuantFW)
QuantilesFW <- format(signif(QuantilesFW,2), scientific = TRUE)
FW_Sum <- cbind(QPEC, QuantilesFW)#name rows and combine data
rownames(FW_Sum) <-  c('Observed', 'Default', 'Adjusted Freshwater Compartment')
colnames(FW_Sum) <- c('QPEC','Min', '25th', '50th', '75th', 'Max')
FW_Sum %>%
kable('html') %>%
kable_styling(bootstrap_options ='striped', full_width = T,position='left')%>%
scroll_box(width ='800px', height = '175px')
ToxDate <-  c(BulkPEC_AdjustedFW$date[1], BulkPEC_AdjustedFW$date[3652])
Acute <- c(0.1, 0.1)  # LC50 1 day test Moore et al. 1998
Chronic <- c(0.024, 0.024) # LC50 10 day Hyalella azteca Ding et al. 2012
ggplot() +
geom_line(aes(x = ToxDate, y = Chronic, color = '10 Day LC50'), linetype=2) +
geom_line(aes(x=BulkPEC_AdjustedFW$date, y=fw_conc_median_vector_AdjustedFW, color ='Median PEC'), linetype=2) +
geom_line(data = BulkPEC_AdjustedFW, aes(x= date, y = fw_conc, color = 'PEC')) +
scale_color_manual(values = c('red', 'black','blue')) +
scale_linetype_manual(values = 2) +
coord_trans(y='log10')+
scale_y_continuous(breaks = c(10^-5, 10^-4, 10^-3, .01, .1, 1), limits = c(10^-5,1)) +
theme_classic(base_size= 16) +
theme(legend.title=element_text(colour='white', size=0)) +
labs(x = expression(paste('Date')), y = expression(paste('Bifenthrin [ ', mu, 'g ', L^-1, ' ]')))
ToxDate <-  c(BulkPEC_AdjustedFW$date[3552], BulkPEC_AdjustedFW$date[3652])
ggplot() +
geom_line(aes(x = ToxDate, y = Chronic, color = '10 Day LC50'), linetype=2) +
geom_line(aes(x=BulkPEC_AdjustedFW$date, y=fw_conc_median_vector_AdjustedFW, color ='Median PEC'), linetype=2) +
geom_line(data = BulkPEC_AdjustedFW, aes(x= date, y = fw_conc, color = 'PEC')) +
scale_color_manual(values = c('red','black', 'blue')) +
scale_linetype_manual(values = 2) +
coord_trans(y='log10')+
scale_y_continuous(breaks = c(10^-5, 10^-4, 10^-3, .01, .1, 1), limits = c(10^-5,1)) +
scale_x_date(date_breaks = "10 days", limits = c(BulkPEC_AdjustedFW$date[3552], BulkPEC_AdjustedFW$date[3652])) +
theme_classic(base_size= 16) +
theme(legend.title=element_text(colour='white', size=0)) +
theme(axis.text.x=element_text(angle=90, vjust = 0.5)) +
labs(x = expression(paste('Date')), y = expression(paste('Bifenthrin [ ', mu, 'g ', L^-1, ' ]')))
HC5 <- c(hc5_LC50_chronic,hc5_LC50_acute, hc5_EC50_chronic, hc5_EC50_acute)
row<- c('LC50 Chronic', 'LC50 Acute', 'EC50 Chronic', 'EC50 Acute')
HC5 <- cbind(HC5, row)
HC5 %>%
kable('html') %>%
kable_styling(bootstrap_options ='striped', full_width = T,position='left')%>%
scroll_box(width ='800px', height = '175px')
HC5 <- format(c(hc5_LC50_chronic,hc5_LC50_acute, hc5_EC50_chronic, hc5_EC50_acute), digits=2, scientific=TRUE)
Endpoint<- c('LC50 Chronic', 'LC50 Acute', 'EC50 Chronic', 'EC50 Acute')
HC5 <- cbind(Endpoint,HC5)
HC5 %>%
kable('html') %>%
kable_styling(bootstrap_options ='striped', full_width = T,position='left')%>%
scroll_box(width ='800px', height = '175px')
HC5 <- format(c(hc5_LC50_chronic,hc5_LC50_acute, hc5_EC50_chronic, hc5_EC50_acute), digits=2, scientific=TRUE)
Endpoint<- c('LC50 Chronic', 'LC50 Acute', 'EC50 Chronic', 'EC50 Acute')
HC5 <- cbind(Endpoint,HC5)
HC5 %>%
kable('html') %>%
kable_styling(bootstrap_options ='striped', full_width = T,position='left')%>%
scroll_box(width ='800px', height = '225px')
data_water <- read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_water_All_UpTo2019.csv")
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County=="Fresno"|County=="Kern"|County=="Kings"|County=="Tulare")
data_water <- read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_water_All_UpTo2019.csv")
data_water <- read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_water_All_UpTo2019.csv"))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County=="Fresno"|County=="Kern"|County=="Kings"|County=="Tulare")
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare")
View(bifenthrin)
View(bifenthrin)
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>2004-12-31 & Sample_date<2015-01-01)
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare")
bifenthrin
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date(2004-12-31) & Sample_date<as.Date(2015-01-01))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date(2004-12-31, "Y-m-dd") & Sample_date<as.Date(2015-01-01,"Y-m-dd"))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date(2004-12-31, "%Y-%m-%dd") & Sample_date<as.Date(2015-01-01,"%Y-%m-%dd"))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date(2004-12-31, "%Y-%m-%d") & Sample_date<as.Date(2015-01-01,"%Y-%m-%d"))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
output <- write_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_Bifenthrin_FresnoKernKingsTulare_2005_2014.csv"))
output <- write_csv(bifenthrin, here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_Bifenthrin_FresnoKernKingsTulare_2005_2014.csv"))
data_water <- read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_SED_All_UpTo2019.csv"))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
output <- write_csv(bifenthrin, here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_FWSED_Bifenthrin_FresnoKernKingsTulare_2005_2014.csv"))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare")
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
data_water <- read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_SED_All_UpTo2019.csv"))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
View(bifenthrin)
data_water <- read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_water_All_UpTo2019.csv"))
bifenthrin <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
output_water <- write_csv(bifenthrin, here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_FW_Bifenthrin_FresnoKernKingsTulare_2005_2014.csv"))
data_sediment <-  read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_SED_All_UpTo2019.csv"))
View(data_sediment)
data_sediment$Sample_date <- as.Date(data_sediment$Sample_date, "%Y-%m-%d")
bifenthrin_sediment <- data_sediment %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
View(bifenthrin_sediment)
data_sediment <-  read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_SED_All_UpTo2019.csv"))
data_sediment$Sample_date <- as.Date(data_sediment$Sample_date, "%Y-%m-%d")
View(data_sediment)
data_sediment <-  read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_SED_All_UpTo2019.csv"))
data_sediment$Sample_date <- as.Date(data_sediment$Sample_date, "%m/%d/%Y")
bifenthrin_sediment <- data_sediment %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
data_water <- read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_water_All_UpTo2019.csv"))
data_sediment <-  read_csv(here::here("Box","Pesticide_FT_ModelComparison", "Monitoring_Data", "CDPR_SURF_SED_All_UpTo2019.csv"))
data_sediment$Sample_date <- as.Date(data_sediment$Sample_date, "%m/%d/%Y")
bifenthrin_water <- data_water %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
bifenthrin_sediment <- data_sediment %>%
filter(Chemical_name=="bifenthrin") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
output_water <- write_csv(bifenthrin_water, here::here("Box","CLiCC_FT_Case_Studies", "Visalia_PesticideRisk", "Data","Monitoring_Data", "CDPR_SURF_FW_Bifenthrin_FresnoKernKingsTulare_2005_2014.csv"))
output_sediment <-  write_csv(bifenthrin_sediment, here::here("Box","CLiCC_FT_Case_Studies", "Visalia_PesticideRisk", "Data","Monitoring_Data", "CDPR_SURF_FWSED_Bifenthrin_FresnoKernKingsTulare_2005_2014.csv"))
output_water <- write_csv(bifenthrin_water, here::here("Box","CLiCC_Case_Studies_FT", "Visalia_PesticideRisk", "Data","Monitoring_Data", "CDPR_SURF_FW_Bifenthrin_FresnoKernKingsTulare_2005_2014.csv"))
output_sediment <-  write_csv(bifenthrin_sediment, here::here("Box","CLiCC_Case_Studies_FT", "Visalia_PesticideRisk", "Data","Monitoring_Data", "CDPR_SURF_FWSED_Bifenthrin_FresnoKernKingsTulare_2005_2014.csv"))
water <- data_water %>%
filter(Chemical_name=="esfenvalerate") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
sediment <- data_sediment %>%
filter(Chemical_name=="esfenvalerate") %>%
filter(County_name=="Fresno"|County_name=="Kern"|County_name=="Kings"|County_name=="Tulare") %>%
filter(Sample_date>as.Date("2004-12-31", "%Y-%m-%d") & Sample_date<as.Date("2015-01-01","%Y-%m-%d"))
output_water <- write_csv(water, here::here("Box","CLiCC_Case_Studies_FT", "Visalia_PesticideRisk", "Data","Monitoring_Data", "CDPR_SURF_FW_Esfenvalerate_FresnoKernKingsTulare_2005_2014.csv"))
output_sediment <-  write_csv(sediment, here::here("Box","CLiCC_Case_Studies_FT", "Visalia_PesticideRisk", "Data","Monitoring_Data", "CDPR_SURF_FWSED_Esfenvalerate_FresnoKernKingsTulare_2005_2014.csv"))
setwd('/Users/nicol/Box/PesticideRisk_AnalyticalTools/CalPIP_PesticideLoads')
load.project()
library(ProjectTemplate)
load.project()
head(constantps)
load.project()
https://github.com/johnmyleswhite/log4r
https://github.com/johnmyleswhite/log4r
install.packages("log4r")
library(log4r)
vignette("performance", package = "log4r")
?log4r
?create.logger
